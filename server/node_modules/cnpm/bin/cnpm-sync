#!/usr/bin/env node

/**!
 * cnpm - bin/cnpm-sync
 *
 * Copyright(c) cnpmjs.org and other contributors.
 * MIT Licensed
 *
 * Authors:
 *  fengmk2 <fengmk2@gmail.com> (http://fengmk2.github.com)
 */

'use strict';

/**
 * Module dependencies.
 */

var path = require('path');
var urllib = require('urllib');
var open = require('open');
var npm = require('npm');
var config = require('../config');
var argv = require('../parse_argv')();

var args = argv.args;
var registry = argv.registry;

var name;
try {
  name = args[0] || require(path.join(process.cwd(), 'package.json')).name;
} catch (err) {
  console.log('Read `package.json` file error: %s', err.message);
  process.exit(1);
}

if (!name) {
  console.log('Usage: $ cnpm sync [moduleName]');
  process.exit(1);
}

var logurl;
var lastLines = 0;

function showlog() {
  npm.registry.request('GET', logurl + '?offset=' + lastLines, function (err, info) {
    if (err) {
      throw err;
    }
    var log = info.log.trim();
    if (!log) {
      return setTimeout(showlog, 2000);
    }
    console.log(log);
    lastLines += log.split('\n').length;
    if (log.indexOf('[done] Sync ' + name) >= 0) {
      process.exit(0);
    } else {
      setTimeout(showlog, 2000);
    }
  });
}

npm.load({
  registry: registry,
  cache: argv.cachepath,
  loglevel: 'warn',
  userconfig: argv.userconfig,
}, function (err) {
  npm.registry.request('PUT', name + '/sync', {}, function (err, result) {
    if (err) {
      throw err;
    }
    logurl = name + '/sync/log/' + result.logId;
    console.log('logurl: %s/%s', registry, logurl);
    showlog();
  });
});

